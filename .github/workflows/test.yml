# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
  
on:
  push:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Run a multi-line scrip
        id: releaseNum
        run: |
          echo "releaseNum<<EOF" >> $GITHUB_ENV
          echo "$(cut -d'_' -f3 <<<"${GITHUB_REF##*/}")" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          #
          echo "${{ env.TEST }}"
          echo "${{ env.releaseNum }}"
          echo "${GITHUB_REF_NAME}"
          echo "${GITHUB_EVENT_NAME}"
          echo "${GITHUB_RUN_ID}"
          echo "${{github.run_id}}"
          echo "------"
          echo "${{ env.releaseNum }}"
          echo "------"
          echo "$releaseNum"
          echo "${{github.ref_name}}"
          
      - name: Nexus config
        run: |
          echo "${{ env.TEST }}"
          #test comment
          cat <<EOT >> .github/nexus-releases.yml
          apps:
            - name: store
              id: ${{ env.releaseNum }}
              artifacts:
                - classifier: 
                  zip: false
                  paths:
                    - '**/STORE.zip'
          EOT
          
      - name: create zip
        run: |
          pwd
          zip -r STORE.zip ".github/nexus-releases.yml"
          find . -name STORE.zip
          pwd
          ls -F
          

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: yaml
          path: .github/nexus-releases.yml
